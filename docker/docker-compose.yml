version: '3'
services:

  # NGINX
  chat_app_nginx:
    build:
      context: ../
      dockerfile: ./docker/services/nginx/Dockerfile
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./services/nginx/sites-available:/etc/nginx/sites-available
      - ../services/frontend:/var/www/html/frontend
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    restart: always
    depends_on:
      - chat_app_users_api_php
     # - chat_app_chat_api_php
      - chat_app_frontend_php

      # Users_api PHP
  chat_app_users_api_php:
    build:
      context: ../
      dockerfile: ./docker/services/users_api/Dockerfile
    restart: always
    env_file:
      - .env
      #- ./services/users_api/.env
    volumes:
      - "./services/users_api/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "../services/users_api:/var/www/html/users_api"
    depends_on:
      - chat_app_mysqldb

  # Frontend PHP
  chat_app_frontend_php:
    build:
      context: ../
      dockerfile: ./docker/services/frontend/Dockerfile
    env_file:
      - .env
    restart: always
    volumes:
      - "./services/frontend/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "../services/frontend:/var/www/html/frontend"
    depends_on:
      - chat_app_mysqldb

  # Chat_api PHP
  #chat_app_chat_api_php:
  #  build:
  #    context: ../
  #   dockerfile: ./docker/services/chat_api/Dockerfile
  #  restart: always
  #  volumes:
  #    - "./services/chat_api/php.ini:/usr/local/etc/php/conf.d/php.ini"
  #    - "../services/chat_api:/var/www/html/chat_api"
  #  depends_on:
  #    - chat_app_mysqldb

  # PHP MyAdmin
  chat_app_myadmin:
    build:
      context: ../
      dockerfile: ./docker/services/myadmin/Dockerfile
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${MYSQL_HOST}
    restart: always
    depends_on:
      - chat_app_mysqldb

  # Node
  chat_app_nodejs:
    build:
      context: ../
      dockerfile: ./docker/services/node/Dockerfile
    env_file:
      - .env
    volumes:
      - "../services/chat_api:/var/www/chat_api"
    ports:
      - "8000:8000"
    depends_on:
      - chat_app_mysqldb

      # MySQL
  chat_app_mysqldb:
    build:
      context: ../
      dockerfile: ./docker/services/mysql/Dockerfile
    container_name: ${MYSQL_HOST}
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
      #- ./services/mysql/.env
    ports:
      - "8989:3306"
    volumes:
      - "./services/mysql/data:/var/lib/mysql"
